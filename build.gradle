buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
//        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
//apply plugin: 'com.github.johnrengelman.shadow'

group = 'org.winterblade.minecraft.mods.needs' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'NeedsWantsDesires-${minecraft_version}'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}

configurations {
    inJar
}
configurations.compile.extendsFrom(configurations.inJar)

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                needswantsdesires {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                needswantsdesires {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Not really 'inJar', but sorta in the JAR.
    inJar "org.mariuszgromada.math:MathParser.org-mXparser:4.2.0"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "needswantsdesires",
            "Specification-Vendor": "Taryn Winterblade",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Taryn Winterblade",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "ContainedDeps": "MathParser.org-mXparser-4.2.0.jar"
        ])
    }
//    from(configurations.inJar) {
//        into 'META-INF/libraries'
//    }

    // None of the other bloody methods work. Shoving it into the #$%&ing JAR. Hope nobody else likes math.
    from configurations.inJar.collect { it.isDirectory() ? it : zipTree(it) }
}

//shadowJar {
//    classifier = ""
//    dependencies {
//        include dependency("org.mariuszgromada.math:MathParser.org-mXparser:4.2.0")
//    }
//}

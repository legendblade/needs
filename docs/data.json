{"needs":[{"aliases":[],"children":[{"aliases":[],"children":[{"aliases":[],"children":[{"mod":"Minecraft","aliases":["attackdamage","attack"],"children":[],"isRoot":false,"description":"Tracks the player\u0027s current attack damage bonus","fields":[],"id":"attack_damage"},{"mod":"Minecraft","aliases":["luck"],"children":[],"isRoot":false,"description":"Tracks the player\u0027s luck level","fields":[],"id":"luck"}],"isRoot":false,"description":"A collection of attribute-based needs that use custom modifiers to affect the given stat","fields":[{"name":"min","type":"Number","description":"The minimum value this need can be set through the the mod; this can be higher than the actual minimum value of the attribute","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Minimum of the attribute"},{"name":"max","type":"Number","description":"The maximum value this need can be set through the the mod; this can be lower than the actual maximum value of the attribute","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Maximum of the attribute"}],"id":"CustomAttributeNeed"},{"mod":"Minecraft","aliases":["maxhp","maxhealth"],"children":[],"isRoot":false,"description":"Tracks the player\u0027s current maximum health","fields":[],"id":"max_health"}],"isRoot":false,"description":"A collection of needs that target a specific character attribute","fields":[],"id":"AttributeBasedNeed"},{"aliases":[],"children":[{"mod":"Minecraft","aliases":["lightlevel","light"],"children":[],"isRoot":false,"description":"Tracks the light level of the block the player\u0027s feet are in","fields":[],"id":"light"},{"mod":"Minecraft","aliases":["moon","moonphase"],"children":[],"isRoot":false,"description":"Tracks the moon phase (0.0-1.0) of the current dimension the player is in","fields":[],"id":"moon_phase"},{"mod":"Minecraft","aliases":["saturation"],"children":[],"isRoot":false,"description":"Tracks the saturation level of the player","fields":[],"id":"saturation"},{"mod":"Minecraft","aliases":["sunlight"],"children":[],"isRoot":false,"description":"Tracks the amount of natural light hitting the block the player\u0027s feet are in","fields":[],"id":"sunlight"},{"mod":"Minecraft","aliases":["temperature"],"children":[],"isRoot":false,"description":"Tracks the vanilla temperature based on biome and Y-level","fields":[],"id":"temperature"},{"mod":"Minecraft","aliases":["ylevel","depth","y"],"children":[],"isRoot":false,"description":"Tracks the current Y-level of the player","fields":[],"id":"y_level"}],"isRoot":false,"description":"A read-only need can be read by other needs, and have levels assigned to it, but cannot be changed through manipulators or level actions","fields":[],"id":"ReadOnlyNeed"},{"mod":"Minecraft","aliases":["air","breath"],"children":[],"isRoot":false,"description":"Tracks the player\u0027s breath meter","fields":[],"id":"breath"},{"mod":"Minecraft","aliases":["food","hunger"],"children":[],"isRoot":false,"description":"Tracks the player\u0027s hunger meter","fields":[],"id":"food"},{"mod":"Minecraft","aliases":["hp","health"],"children":[],"isRoot":false,"description":"Tracks the player\u0027s current health","fields":[],"id":"health"},{"mod":"Minecraft","aliases":["score","scoreboard"],"children":[],"isRoot":false,"description":"Used to read in scoreboard values of the given criterion; this can be specified multiple times, with different criteria for each one","fields":[{"name":"name","type":"String","description":"The name of the need and the scoreboard entry; needs to be unique.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"criterion","type":"String","description":"The scoreboard criterion; see https://minecraft.gamepedia.com/Scoreboard for valid criteria","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"defaultValue","type":"Number","description":"The default value of the score","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"}],"id":"scoreboard"}],"isRoot":true,"description":"A collection of needs that are updated and cached periodically","fields":[],"id":"CachedTickingNeed"},{"mod":"Needs, Wants, Desires","aliases":["custom"],"children":[],"isRoot":true,"description":"A completely custom need specified by you","fields":[{"name":"name","type":"String","description":"The name of the need; names should be unique","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"min","type":"Number","description":"The minimum allowed value the need can reach","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"max","type":"Number","description":"The maximum allowed value the need can reach","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"initial","type":"Number","description":"The initial value to set the need to when a player first gets it","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"resetOnDeath","type":"Boolean","description":"Should the need reset to the initial level upon death","isOptional":false,"isExpression":false,"isArray":false,"isMap":false}],"id":"custom"}],"mixins":[{"mod":"Needs, Wants, Desires","aliases":["chatonchanged"],"children":[],"isRoot":true,"description":"Use this mixin to print every, single, individual, precise change to the player\u0027s chat. I don\u0027t know why you would use it, but, it\u0027s here in case u li3k ann0y1ng people.","fields":[],"id":"chat_on_changed"},{"mod":"Needs, Wants, Desires","aliases":["chat","chatonlevel"],"children":[],"isRoot":true,"description":"Display a notification in chat anytime the need changes from one level to another","fields":[{"name":"actionBar","type":"Boolean","description":"If set to true, display this value in the action bar. If not, it will be shown in the player\u0027s chat.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"chat_on_level"},{"mod":"Minecraft","aliases":["score","scoreboard"],"children":[],"isRoot":true,"description":"Use this mixin to mirror the need to a scoreboard entry of the same name as the need; the value of the need will be rounded to the nearest whole number.","fields":[],"id":"scoreboard"},{"mod":"Needs, Wants, Desires","aliases":["ui","gui"],"children":[],"isRoot":true,"description":"Adds the need to a UI display so players can easily track their current level","fields":[{"name":"displayName","type":"String","description":"The name to display in the UI; this can be different from the need itself","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The need\u0027s name"},{"name":"icon","type":"String","description":"A path to an icon to use; Needs comes with a large preset amount, which can be specified with just the icon name (e.g. \u0027w_sword001\u0027), a texture from another mod by using the full path (e.g. \u0027minecraft:textures/item/iron_helmet\u0027), or a local image placed in the \u0027config/needs/textures\u0027 directory (e.g. \u0027file:path/to/image.png\u0027)","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"iconWidth","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"iconHeight","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"iconX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"iconY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"iconOffsetX","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI; by default, it will be (32-iconWidth)/2","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"(32-iconWidth)/2"},{"name":"iconOffsetY","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI; by default, it will be (32-iconHeight)/2","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"(32-iconHeight)/2"},{"name":"precision","type":"Number","description":"Sets the number of decimal places displayed in the UI; by default, this is 0","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"color","type":"Number","description":"Sets the RGB color of the bar; this can either be the integer representation of the color, or you can specify a hexidecimal string starting with either # or 0x - when specifying it as hex, you may use shorthand (e.g. \u0027#777\u0027 will expand to \u0027#777777\u0027).","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"iconTextureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"iconTextureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"},{"name":"displayFormat","type":"Number","description":"Optional expression that will be used to modify the value prior to displaying it (in case you want to multiply it, round it, square root things, etc). The min, max, value, and upper and lower bounds of the current level will all be run through this expression.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"None"}],"id":"ui"}],"manipulators":[{"aliases":[],"children":[{"aliases":[],"children":[{"aliases":[],"children":[{"mod":"Minecraft","aliases":["onattack","attack","attacking"],"children":[],"isRoot":false,"description":"Triggered when the player attacks another entity.","fields":[],"id":"attacking"},{"mod":"Minecraft","aliases":["heal","healed"],"children":[],"isRoot":false,"description":"Triggered when the player is healed","fields":[],"id":"heal"},{"mod":"Minecraft","aliases":["damaged","attacked","hurt"],"children":[],"isRoot":false,"description":"Called when the player is hurt","fields":[{"name":"sources","type":"String","description":"An array of damage sources which will trigger this event.","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"}],"id":"hurt"}],"isRoot":false,"description":"A collection of manipulators based on damage (in or out)","fields":[{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","amount":"The amount of damage/healing.","need(Name)":"The current value of the given need by its name."}},{"name":"hostile","type":"Boolean","description":"If hostile mobs should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"passive","type":"Boolean","description":"If passive mobs should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"players","type":"Boolean","description":"If players should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"minAmount","type":"Number","description":"The minimum amount of damage required to trigger this","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxAmount","type":"Number","description":"The maximum amount of damage required to trigger this","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"DamageBasedManipulator"},{"aliases":[],"children":[{"aliases":[],"children":[{"mod":"Minecraft","aliases":["lookingatblock","lookingat"],"children":[],"isRoot":false,"description":"Triggered while the player is looking at, every 5 ticks.","fields":[{"name":"distance","type":"Number","description":"The ray-traced distance to check for the block","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"6"}],"id":"looking_at"},{"mod":"Minecraft","aliases":["block","onblock","aroundblock","nearblock"],"children":[],"isRoot":false,"description":"Checks the immediate surroundings of the player for the given block(s); will fire every 5 ticks.","fields":[{"name":"radius","type":"Number","description":"The radius to check around the player; defaults to 0, which only targets the block the player is standing ontop of.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"}],"id":"on_block"}],"isRoot":false,"description":"A collection of manipulators that check blocks.","fields":[{"name":"amount","type":"Number","description":"The amount to apply; when this is checking an area, count will refer to the number of matching blocks in the area","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"blocks","type":"Block/Tag","description":"A list of blocks to check","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"id":"BlockCheckingManipulator"},{"mod":"Minecraft","aliases":["holding"],"children":[],"isRoot":false,"description":"Triggered every 5 ticks while the player is holding the specified item","fields":[{"name":"amount","type":"Number","description":"The amount to change; count refers to the current stack size of the item(s)","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"mainhand","type":"Boolean","description":"If true, check the player\u0027s mainhand for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"offhand","type":"Boolean","description":"If true, check the player\u0027s offhand for the item","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"items","type":"Item/Tag","description":"An array of items to check against, specified either as a single item (e.g. \u0027minecraft:cobblestone\u0027) or a tag (e.g. \u0027tag:minecraft:leaves\u0027)","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"id":"holding"},{"mod":"Minecraft","aliases":["itemused"],"children":[{"mod":"Minecraft","aliases":["counteditemuse","itemusedonce"],"children":[],"isRoot":false,"description":"A version of Item Used that limits the number of times the player can benefit from the effect per item","fields":[{"name":"defaultAmount","type":"Number","description":"The default amount to apply if not specified on an item level","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"saturation":"The amount of saturation this grants, if food.","count":"The number of times this item has been used prior.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name.","hunger":"The amount of pips on the hunger bar this refills, if food."}},{"name":"items","type":"Map","description":"An key/value map of items/amounts, or array of items using the default amount","isOptional":false,"isExpression":false,"isArray":false,"isMap":true},{"name":"id","type":"String","description":"A unique key that will be used to store data about item usage; only letters, underscores, and numbers will be recognized","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"uses","type":"Number","description":"The number of times the player can benefit from the use of the item; if this is an expression, it will be rounded down to the nearest whole number.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"1"},{"name":"numberStored","type":"Number","description":"The number of items to remember. Items will fall off the list in order of the least recently benefited from; e.g. if uses is 2, and numberStored is also 2, then using Item A, then item B, then Item A, if you were to use Item C, then item B would fall off the list, because Item A was benefited from more recently. If this is an expression, the return value will be rounded down to the nearest whole number (e.g. 0.9 -\u003e 0); if this is less than the size of the list at the time the list is being checked, items will automatically be dropped until the list is down to the proper size.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"No limit(ish)"},{"name":"trackDamage","type":"Boolean","description":"Should damage values be treated as separate items?","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"counted_item_use"}],"isRoot":false,"description":"Triggered when the player uses an item in the list","fields":[{"name":"defaultAmount","type":"Number","description":"The default amount to apply if not specified on an item level","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"saturation":"The amount of saturation this grants, if food.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name.","hunger":"The amount of pips on the hunger bar this refills, if food."}},{"name":"items","type":"Map","description":"An key/value map of items/amounts, or array of items using the default amount","isOptional":false,"isExpression":false,"isArray":false,"isMap":true}],"id":"item_used"}],"isRoot":false,"description":"A collection of manipulators that can display their effect in the tooltip when hovering over the item in an inventory","fields":[{"name":"showTooltip","type":"Boolean","description":"If true, show the tooltip. Note that doing so will incur a slight performance penalty onthe client; defaults to false","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"precision","type":"Number","description":"The number of decimal places to show in tooltips; defaults to 1.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"1"},{"name":"tooltip","type":"String","description":"If this is set, will override the value of the tooltip itself with this string.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Normal tooltip"},{"name":"formatting","type":"String","description":"A key/value map of formatting/color codes to their associated interval to format tooltips with","isOptional":false,"isExpression":false,"isArray":false,"isMap":true},{"name":"displayFormat","type":"Number","description":"Optional expression that will be used to modify the value prior to displaying it (in case you want to multiply it, round it, square root things, etc). Not used if \u0027tooltip\u0027 is set.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"None"}],"id":"TooltipManipulator"},{"mod":"Minecraft","aliases":["inbiometype","inbiome","biome","biometype"],"children":[],"isRoot":false,"description":"Triggers while the player is in one of the specified biomes/biome types; at least one or the other must be specified.","fields":[{"name":"amount","type":"Number","description":"The amount to change by","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"biomes","type":"String","description":"A list of biomes that will trigger this","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"},{"name":"biomeTypes","type":"String","description":"A list of biome types that will trigger this","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"}],"id":"biome"},{"mod":"Minecraft","aliases":["ondeath"],"children":[],"isRoot":false,"description":"Triggered when the player dies.","fields":[{"name":"amount","type":"Number","description":"The amount to change by.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"on_death"},{"mod":"Minecraft","aliases":["perhour"],"children":[],"isRoot":false,"description":"Fired every in-game hour that passes in a world after the first; will multiply its amount by the number of hours that have passed if time skips forward. May not work if time is set back.","fields":[{"name":"amount","type":"Number","description":"The amount to set per hour","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"per_hour"},{"mod":"Minecraft","aliases":["slept","woken"],"children":[],"isRoot":false,"fields":[{"name":"amount","type":"Number","description":"The amount to change by.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"slept","type":"Boolean","description":"If this should trigger for successful sleeps","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"woken","type":"Boolean","description":"If this should trigger for the player being woken up without sleeping","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"slept"},{"mod":"Needs, Wants, Desires","aliases":["ontick","tick"],"children":[],"isRoot":false,"description":"Triggered on tick","fields":[{"name":"amount","type":"Number","description":"The amount to adjust by; multiplied by the number of ticks between checks","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"tick"}],"isRoot":false,"fields":[{"name":"dimensions","type":"Set","description":"Optional list of dimension IDs to limit the effect to.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"All Dimensions"}],"id":"DimensionBasedManipulator"},{"mod":"Needs, Wants, Desires","aliases":["link","chain","linkchain"],"children":[],"isRoot":false,"description":"Affect a series of needs in lockstep with one another; this adjusts all linked needs as a single atomic action in order to avoid loops. Full chains can and should be defined here, and should only be defined in one location. A link will not be updated if updating it would cause an update to an already updated need.","fields":[{"name":"chain","type":"Link","description":"The chain of linked needs to handle; chains will be evaluated starting from the affected need and will propagate through until no more needs need to be updated.","isOptional":false,"isExpression":false,"isArray":true,"isMap":false,"listOrMapClass":{"description":"An individual link in the chain. All links are symmetrical; e.g. if you adjust the need on the left side of the link, the right side will be adjusted by the amount, and if you adjust the right side of the link, the left side will be adjusted.","fields":[{"name":"left","type":"LinkHalf","description":"The left side of the link","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"Defines one side of the link","fields":[{"name":"need","type":"Need","description":"The need for this side of the link","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of this side of the chain.","other":"The current value of the other side of the chain.","need(Name)":"The current value of the given need by its name.","previous":"The previous value of the other side of the chain.","change":"The amount the other side of the chain changed by, or: (current - previous)."}}],"id":"link_chain.chain.left"}},{"name":"right","type":"LinkHalf","description":"The right side of the link","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"Defines one side of the link","fields":[{"name":"need","type":"Need","description":"The need for this side of the link","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of this side of the chain.","other":"The current value of the other side of the chain.","need(Name)":"The current value of the given need by its name.","previous":"The previous value of the other side of the chain.","change":"The amount the other side of the chain changed by, or: (current - previous)."}}],"id":"link_chain.chain.right"}}],"id":"link_chain.chain"}},{"name":"onceEver","type":"Boolean","description":"Changes the functionality to only ever visit a linked need once ever when following every chain. By default, if Need A, B, and C were all linked together, a chain could go from A -\u003e B -\u003e C, and then also from A -\u003e C. When this is set to true, the second chain wouldn\u0027t happen as it would detect C had been visited once already. In all cases, the first chain (A -\u003e B -\u003e C) could never go back to A or B, as they have been visited in that specific chain.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"link_chain"},{"mod":"Needs, Wants, Desires","aliases":["onneedchanged"],"children":[],"isRoot":false,"description":"Affect this need when another need has changed; do not set to the same need this is applied to. You have been warned. Can be applied multiple times to the same need with different values.","fields":[{"name":"need","type":"Need","description":"The name of the other need to check.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","other":"The current value of the other need.","need(Name)":"The current value of the given need by its name.","previous":"The previous value of the other need.","change":"The amount the need changed by, or: (current - previous)."}}],"id":"on_need_changed"}],"isRoot":true,"description":"The base for most manipulators","fields":[{"name":"downTo","type":"Number","description":"If specified, the lowest value this manipulator can set the parent need to; if set, this will incur a slight performance hit, as the value of the need has to be calculated at the manipulator level.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"upTo","type":"Number","description":"If specified, the highest value this manipulator can set the parent need to; if set, this will incur a slight performance hit, as the value of the need has to be calculated at the manipulator level.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"BaseManipulator"}],"actions":[{"aliases":[],"children":[{"mod":"Needs, Wants, Desires","aliases":["tickdebug"],"children":[],"isRoot":false,"description":"This is a debug action; don\u0027t use it unless you want your console spammed.","fields":[],"id":"tick_debug"}],"isRoot":true,"fields":[],"id":"TickingLevelAction"},{"mod":"Needs, Wants, Desires","aliases":["adjustneed"],"children":[],"isRoot":true,"description":"Adjusts the value of either the parent need, or the target need","fields":[{"name":"need","type":"Need","description":"The need to affect; leave out to specify the parent need.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"amount","type":"Number","description":"The amount by which to change the targeted need when this action is fired; as a continuous action, it will store the amount it changes the need by, and restore it upon exiting the level.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"adjust_need"},{"mod":"Minecraft","aliases":["command"],"children":[],"isRoot":true,"description":"Runs a command when entering or exiting the level, optionally re-running it on respawn.","fields":[{"name":"command","type":"String","description":"The command to run; @p will target the player affected","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"reapply","type":"Boolean","description":"Should the command be re-run when the player respawns","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"log","type":"Boolean","description":"Should the command be logged","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"command"},{"mod":"Minecraft","aliases":["potioneffect"],"children":[],"isRoot":true,"description":"Applies a potion effect to the player","fields":[{"name":"effect","type":"String","description":"The ID of the potion effect.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"duration","type":"Number","description":"The amount of time to apply the effect for if specified as an entry or exit action; continuous actions will ignore this.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"amplifier","type":"Number","description":"The level to amplify the potion; the default, 0, will apply as a level 1 potion, 1 would apply a level 2 potion, etc.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"persistOnDeath","type":"Boolean","description":"If true, the effect will be reapplied with the remaining duration on death; this only applies when this is used as an entry or exit action, continuous effects will always reapply on death.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"additive","type":"Boolean","description":"If true, potion effects from this action will stack with others of the same type from other actions. This should generally be kept the same amongst all uses of the same effect, otherwise things will become... interesting.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"particles","type":"Boolean","description":"Set if the potion effect should show particles or not.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"potion_effect"}]}

{"needs":[{"id":"CachedTickingNeed","description":"A collection of needs that are updated and cached periodically","aliases":[],"fields":[],"children":[{"id":"AttributeBasedNeed","description":"A collection of needs that target a specific character attribute","aliases":[],"fields":[],"children":[{"id":"CustomAttributeNeed","description":"A collection of attribute-based needs that use custom modifiers to affect the given stat","aliases":[],"fields":[{"name":"min","type":"Number","description":"The minimum value this need can be set through the the mod; this can be higher than the actual minimum value of the attribute","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Minimum of the attribute"},{"name":"max","type":"Number","description":"The maximum value this need can be set through the the mod; this can be lower than the actual maximum value of the attribute","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Maximum of the attribute"}],"children":[{"id":"attack_damage","mod":"needswantsdesires","description":"Tracks the player\u0027s current attack damage bonus","aliases":["attackdamage","attack"],"fields":[],"children":[],"isRoot":false},{"id":"luck","mod":"needswantsdesires","description":"Tracks the player\u0027s luck level","aliases":["luck"],"fields":[],"children":[],"isRoot":false}],"isRoot":false},{"id":"max_health","mod":"needswantsdesires","description":"Tracks the player\u0027s current maximum health","aliases":["maxhp","maxhealth"],"fields":[],"children":[],"isRoot":false}],"isRoot":false},{"id":"health","mod":"needswantsdesires","description":"Tracks the player\u0027s current health","aliases":["hp","health"],"fields":[],"children":[],"isRoot":false},{"id":"ReadOnlyNeed","description":"A read-only need can be read by other needs, and have levels assigned to it, but cannot be changed through manipulators or level actions","aliases":[],"fields":[],"children":[{"id":"moon_phase","mod":"needswantsdesires","description":"Tracks the moon phase (0.0-1.0) of the current dimension the player is in","aliases":["moon","moonphase"],"fields":[],"children":[],"isRoot":false},{"id":"saturation","mod":"needswantsdesires","description":"Tracks the saturation level of the player","aliases":["saturation"],"fields":[],"children":[],"isRoot":false},{"id":"sunlight","mod":"needswantsdesires","description":"Tracks the amount of natural light hitting the block the player\u0027s feet are in","aliases":["sunlight"],"fields":[],"children":[],"isRoot":false},{"id":"light","mod":"needswantsdesires","description":"Tracks the light level of the block the player\u0027s feet are in","aliases":["lightlevel","light"],"fields":[],"children":[],"isRoot":false},{"id":"y_level","mod":"needswantsdesires","description":"Tracks the current Y-level of the player","aliases":["ylevel","depth","y"],"fields":[],"children":[],"isRoot":false},{"id":"temperature","mod":"needswantsdesires","description":"Tracks the vanilla temperature based on biome and Y-level","aliases":["temperature"],"fields":[],"children":[],"isRoot":false}],"isRoot":false},{"id":"breath","mod":"needswantsdesires","description":"Tracks the player\u0027s breath meter","aliases":["air","breath"],"fields":[],"children":[],"isRoot":false},{"id":"food","mod":"needswantsdesires","description":"Tracks the player\u0027s hunger meter","aliases":["food","hunger"],"fields":[],"children":[],"isRoot":false}],"isRoot":true},{"id":"custom","mod":"needswantsdesires","description":"A completely custom need specified by you","aliases":["custom","tick","ontick"],"fields":[{"name":"name","type":"String","description":"The name of the need; names should be unique","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"min","type":"Number","description":"The minimum allowed value the need can reach","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"max","type":"Number","description":"The maximum allowed value the need can reach","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"initial","type":"Number","description":"The initial value to set the need to when a player first gets it","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"resetOnDeath","type":"Boolean","description":"Should the need reset to the initial level upon death","isOptional":false,"isExpression":false,"isArray":false,"isMap":false}],"children":[],"isRoot":true}],"mixins":[{"id":"scoreboard","mod":"needswantsdesires","description":"Use this mixin to mirror the need to a scoreboard entry of the same name as the need; the value of the need will be rounded to the nearest whole number.","aliases":["score","scoreboard"],"fields":[],"children":[],"isRoot":true},{"id":"ui","mod":"needswantsdesires","description":"Adds the need to a UI display so players can easily track their current level","aliases":["ui","gui"],"fields":[{"name":"displayName","type":"String","description":"The name to display in the UI; this can be different from the need itself","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The need\u0027s name"},{"name":"icon","type":"String","description":"A path to an icon to use; Needs comes with a large preset amount, which can be specified with just the icon name (e.g. \u0027w_sword001\u0027), or a texture from another mod by using the full path (e.g. \u0027minecraft:textures/item/iron_helmet\u0027)","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"iconWidth","type":"Number","description":"The width of the icon texture; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"iconHeight","type":"Number","description":"The height of the icon texture; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"iconX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"iconY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"iconOffsetX","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI; by default, it will be (32-iconWidth)/2","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"(32-iconWidth)/2"},{"name":"iconOffsetY","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI; by default, it will be (32-iconHeight)/2","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"(32-iconHeight)/2"},{"name":"precision","type":"Number","description":"Sets the number of decimal places displayed in the UI; by default, this is 0","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"color","type":"Number","description":"Sets the RGB color of the bar; this can either be the integer representation of the color, or you can specify a hexidecimal string starting with either # or 0x - when specifying it as hex, you may use shorthand (e.g. \u0027#777\u0027 will expand to \u0027#777777\u0027).","isOptional":false,"isExpression":false,"isArray":false,"isMap":false}],"children":[],"isRoot":true},{"id":"chat_on_level","mod":"needswantsdesires","description":"Display a notification in chat anytime the need changes from one level to another","aliases":["chat","chatonlevel"],"fields":[{"name":"actionBar","type":"Boolean","description":"If set to true, display this value in the action bar. If not, it will be shown in the player\u0027s chat.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"children":[],"isRoot":true},{"id":"chat_on_changed","mod":"needswantsdesires","description":"Use this mixin to print every, single, individual, precise change to the player\u0027s chat. I don\u0027t know why you would use it, but, it\u0027s here in case u li3k ann0y1ng people.","aliases":["chatonchanged"],"fields":[],"children":[],"isRoot":true}],"manipulators":[{"id":"BaseManipulator","description":"The base for most manipulators","aliases":[],"fields":[{"name":"downTo","type":"Number","description":"If specified, the lowest value this manipulator can set the parent need to; if set, this will incur a slight performance hit, as the value of the need has to be calculated at the manipulator level.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"upTo","type":"Number","description":"If specified, the highest value this manipulator can set the parent need to; if set, this will incur a slight performance hit, as the value of the need has to be calculated at the manipulator level.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"children":[{"id":"TooltipManipulator","description":"A collection of manipulators that can display their effect in the tooltip when hovering over the item in an inventory","aliases":[],"fields":[{"name":"showTooltip","type":"Boolean","description":"If true, show the tooltip. Note that doing so will incur a slight performance penalty onthe client; defaults to false","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"precision","type":"Number","description":"The number of decimal places to show in tooltips; defaults to 1.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"1"},{"name":"tooltip","type":"String","description":"If this is set, will override the value of the tooltip itself with this string.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Normal tooltip"},{"name":"formatting","type":"RangeMap","description":"A key/value map of formatting/color codes to their associated interval to format tooltips with","isOptional":false,"isExpression":false,"isArray":false,"isMap":false}],"children":[{"id":"holding","mod":"needswantsdesires","description":"Triggered every 5 ticks while the player is holding the specified item","aliases":["holding"],"fields":[{"name":"amount","type":"Number","description":"The amount to change; count refers to the current stack size of the item(s)","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the need being changed."}},{"name":"mainhand","type":"Boolean","description":"If true, check the player\u0027s mainhand for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"offhand","type":"Boolean","description":"If true, check the player\u0027s offhand for the item","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"items","type":"Item/Tag","description":"An array of items to check against, specified either as a single item (e.g. \u0027minecraft:cobblestone\u0027) or a tag (e.g. \u0027tag:minecraft:leaves\u0027)","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"children":[],"isRoot":false},{"id":"BlockCheckingManipulator","description":"A collection of manipulators that check blocks.","aliases":[],"fields":[{"name":"amount","type":"Number","description":"The amount to apply; when this is checking an area, count will refer to the number of matching blocks in the area","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the need being changed."}},{"name":"blocks","type":"Block/Tag","description":"A list of blocks to check","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"children":[{"id":"looking_at","mod":"needswantsdesires","description":"Triggered while the player is looking at, every 5 ticks.","aliases":["lookingat","lookingatblock"],"fields":[{"name":"distance","type":"Number","description":"The ray-traced distance to check for the block","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"6"}],"children":[],"isRoot":false},{"id":"on_block","mod":"needswantsdesires","description":"Checks the immediate surroundings of the player for the given block(s); will fire every 5 ticks.","aliases":["onblock","block","aroundblock","nearblock"],"fields":[{"name":"radius","type":"Number","description":"The radius to check around the player; defaults to 0, which only targets the block the player is standing ontop of.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed."},"defaultValue":"0"}],"children":[],"isRoot":false}],"isRoot":false},{"id":"item_used","mod":"needswantsdesires","description":"Triggered when the player uses an item in the list","aliases":["itemused"],"fields":[{"name":"defaultAmount","type":"Number","description":"The default amount to apply if not specified on an item level","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"saturation":"The amount of saturation this grants, if food.","current":"The current value of the need being changed.","hunger":"The amount of pips on the hunger bar this refills, if food."}},{"name":"items","type":"Map","description":"An key/value map of items/amounts, or array of items using the default amount","isOptional":false,"isExpression":false,"isArray":false,"isMap":true}],"children":[],"isRoot":false}],"isRoot":false},{"id":"DamageBasedManipulator","description":"A collection of manipulators based on damage (in or out)","aliases":[],"fields":[{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed.","amount":"The amount of damage/healing."}},{"name":"hostile","type":"Boolean","description":"If hostile mobs should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"passive","type":"Boolean","description":"If passive mobs should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"players","type":"Boolean","description":"If players should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"minAmount","type":"Number","description":"The minimum amount of damage required to trigger this","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxAmount","type":"Number","description":"The maximum amount of damage required to trigger this","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"children":[{"id":"hurt","mod":"needswantsdesires","description":"Called when the player is hurt","aliases":["damaged","attacked","hurt"],"fields":[{"name":"sources","type":"String","description":"An array of damage sources which will trigger this event.","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"}],"children":[],"isRoot":false},{"id":"attacking","mod":"needswantsdesires","description":"Triggered when the player attacks another entity.","aliases":["onattack","attacking","attack"],"fields":[],"children":[],"isRoot":false},{"id":"heal","mod":"needswantsdesires","description":"Triggered when the player is healed","aliases":["healed","heal"],"fields":[],"children":[],"isRoot":false}],"isRoot":false},{"id":"on_need_changed","mod":"needswantsdesires","description":"Affect this need when another need has changed; do not set to the same need this is applied to. You have been warned. Can be applied multiple times to the same need with different values.","aliases":["onneedchanged"],"fields":[{"name":"need","type":"Need","description":"The name of the other need to check.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed.","other":"The current value of the other need.","previous":"The previous value of the other need.","change":"The amount the need changed by, or: (current - previous)."}}],"children":[],"isRoot":false},{"id":"per_hour","mod":"needswantsdesires","description":"Fired every in-game hour that passes in a world after the first; will multiply its amount by the number of hours that have passed if time skips forward. May not work if time is set back.","aliases":["perhour"],"fields":[{"name":"amount","type":"Number","description":"The amount to set per hour","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed."}}],"children":[],"isRoot":false},{"id":"biome","mod":"needswantsdesires","description":"Triggers while the player is in one of the specified biomes/biome types; at least one or the other must be specified.","aliases":["inbiome","biome","inbiometype","biometype"],"fields":[{"name":"amount","type":"Number","description":"The amount to change by","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed."}},{"name":"biomes","type":"String","description":"A list of biomes that will trigger this","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"},{"name":"biomeTypes","type":"String","description":"A list of biome types that will trigger this","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"}],"children":[],"isRoot":false},{"id":"on_death","mod":"needswantsdesires","description":"Triggered when the player dies.","aliases":["ondeath"],"fields":[{"name":"amount","type":"Number","description":"The amount to change by.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed."}}],"children":[],"isRoot":false}],"isRoot":true}],"actions":[{"id":"adjust_need","mod":"needswantsdesires","description":"Adjusts the value of either the parent need, or the target need","aliases":["adjustneed"],"fields":[{"name":"need","type":"Need","description":"The need to affect; leave out to specify the parent need.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"amount","type":"Number","description":"The amount by which to change the targeted need when this action is fired; as a continuous action, it will store the amount it changes the need by, and restore it upon exiting the level.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the need being changed."}}],"children":[],"isRoot":true},{"id":"potion_effect","mod":"needswantsdesires","description":"Applies a potion effect to the player","aliases":["potioneffect"],"fields":[{"name":"effect","type":"String","description":"The ID of the potion effect.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"duration","type":"Number","description":"The amount of time to apply the effect for if specified as an entry or exit action; continuous actions will ignore this.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"amplifier","type":"Number","description":"The level to amplify the potion; the default, 0, will apply as a level 1 potion, 1 would apply a level 2 potion, etc.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"persistOnDeath","type":"Boolean","description":"If true, the effect will be reapplied with the remaining duration on death; this only applies when this is used as an entry or exit action, continuous effects will always reapply on death.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"children":[],"isRoot":true},{"id":"TickingLevelAction","aliases":[],"fields":[],"children":[{"id":"tick_debug","mod":"needswantsdesires","description":"This is a debug action; don\u0027t use it unless you want your console spammed.","aliases":["tickdebug"],"fields":[],"children":[],"isRoot":false}],"isRoot":true}]}

{"needs":[{"aliases":[],"children":[{"aliases":[],"children":[{"aliases":[],"children":[{"mod":"Minecraft","aliases":["attackdamage","attack"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the player\u0027s current attack damage bonus","fields":[],"id":"attack_damage"},{"mod":"Minecraft","aliases":["luck"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the player\u0027s luck level","fields":[],"id":"luck"}],"isRoot":false,"extras":{},"description":"A collection of attribute-based needs that use custom modifiers to affect the given stat","fields":[{"name":"min","type":"Number","description":"The minimum value this need can be set through the the mod; this can be higher than the actual minimum value of the attribute","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Minimum of the attribute"},{"name":"max","type":"Number","description":"The maximum value this need can be set through the the mod; this can be lower than the actual maximum value of the attribute","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Maximum of the attribute"}],"id":"CustomAttributeNeed"},{"mod":"Minecraft","aliases":["maxhp","maxhealth"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the player\u0027s current maximum health","fields":[],"id":"max_health"}],"isRoot":false,"extras":{},"description":"A collection of needs that target a specific character attribute","fields":[],"id":"AttributeBasedNeed"},{"aliases":[],"children":[{"mod":"Minecraft","aliases":["air","breath"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the player\u0027s breath meter","fields":[],"id":"breath"},{"mod":"Minecraft","aliases":["food","hunger"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the player\u0027s hunger meter","fields":[],"id":"food"},{"mod":"Minecraft","aliases":["hp","health"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the player\u0027s current health","fields":[],"id":"health"}],"isRoot":false,"extras":{},"description":"Includes some vanilla needs that can have their HUD element hidden","fields":[],"id":"ConcealableHudNeed"},{"aliases":[],"children":[{"mod":"Minecraft","aliases":["distance"],"children":[],"isRoot":false,"extras":{},"fields":[{"name":"squareRoot","type":"Boolean","description":"Should the distance be square rooted automatically; this is more computationally intensive but will produce the actual distance (`a^2 + b^2 \u003d c^2` after all).","isOptional":false,"isExpression":false,"isArray":false,"isMap":false}],"id":"distance"},{"mod":"Minecraft","aliases":["lightlevel","light"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the light level of the block the player\u0027s feet are in","fields":[],"id":"light"},{"mod":"Minecraft","aliases":["moon","moonphase"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the moon phase (0.0-1.0) of the current dimension the player is in","fields":[],"id":"moon_phase"},{"mod":"Minecraft","aliases":["saturation"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the saturation level of the player","fields":[],"id":"saturation"},{"mod":"Minecraft","aliases":["sunlight"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the amount of natural light hitting the block the player\u0027s feet are in","fields":[],"id":"sunlight"},{"mod":"Minecraft","aliases":["temperature"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the vanilla temperature based on biome and Y-level","fields":[],"id":"temperature"},{"mod":"Minecraft","aliases":["ylevel","depth","y"],"children":[],"isRoot":false,"extras":{},"description":"Tracks the current Y-level of the player","fields":[],"id":"y_level"}],"isRoot":false,"extras":{},"description":"A read-only need can be read by other needs, and have levels assigned to it, but cannot be changed through manipulators or level actions","fields":[],"id":"ReadOnlyNeed"},{"mod":"Minecraft","aliases":["score","scoreboard"],"children":[],"isRoot":false,"extras":{},"description":"Used to read in scoreboard values of the given criterion; this can be specified multiple times, with different criteria for each one","fields":[{"name":"name","type":"String","description":"The name of the need and the scoreboard entry; needs to be unique.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"criterion","type":"String","description":"The scoreboard criterion; see https://minecraft.gamepedia.com/Scoreboard for valid criteria","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"defaultValue","type":"Number","description":"The default value of the score","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"}],"id":"scoreboard"}],"isRoot":true,"extras":{},"description":"A collection of needs that are updated and cached periodically","fields":[],"id":"CachedTickingNeed"},{"mod":"Needs, Wants, Desires","aliases":["custom"],"children":[],"isRoot":true,"extras":{},"description":"A completely custom need specified by you","fields":[{"name":"name","type":"String","description":"The name of the need; names should be unique","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"min","type":"Number","description":"The minimum allowed value the need can reach","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"max","type":"Number","description":"The maximum allowed value the need can reach","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"initial","type":"Number","description":"The initial value to set the need to when a player first gets it","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"resetOnDeath","type":"Boolean","description":"Should the need reset to the initial level upon death","isOptional":false,"isExpression":false,"isArray":false,"isMap":false}],"id":"custom"}],"mixins":[{"aliases":[],"children":[{"mod":"Needs, Wants, Desires","aliases":["iconbar"],"children":[],"isRoot":false,"extras":{},"description":"Adds an icon-based bar similar to the food or breath meters to the user\u0027s HUD","fields":[{"name":"filledIcon","type":"Icon","description":"Icon to represent a filled portion of the bar.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"An icon to use on the UI; if specifying no other properties, you may pass this in as a string in the same format as the `icon` field","fields":[{"name":"icon","type":"TextureResource","description":"A path to an icon to use.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"icon_bar.filledIcon.icon"}},{"name":"width","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"height","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"textureX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"textureY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"x","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"textureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"textureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"}],"id":"icon_bar.filledIcon"}},{"name":"negativeIcon","type":"Icon","description":"Icon to represent a negative portion of the bar (if any); if not specified, the minimum of the bar will be clamped at 0.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"An icon to use on the UI; if specifying no other properties, you may pass this in as a string in the same format as the `icon` field","fields":[{"name":"icon","type":"TextureResource","description":"A path to an icon to use.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"icon_bar.negativeIcon.icon"}},{"name":"width","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"height","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"textureX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"textureY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"x","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"textureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"textureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"}],"id":"icon_bar.negativeIcon"}},{"name":"emptyIcon","type":"Icon","description":"Icon to represent the background of the bar.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"An icon to use on the UI; if specifying no other properties, you may pass this in as a string in the same format as the `icon` field","fields":[{"name":"icon","type":"TextureResource","description":"A path to an icon to use.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"icon_bar.emptyIcon.icon"}},{"name":"width","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"height","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"textureX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"textureY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"x","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"textureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"textureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"}],"id":"icon_bar.emptyIcon"}},{"name":"iconValue","type":"Number","description":"How much should one full icon represent.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"maxIcons","type":"Number","description":"The maximum number of icons to show.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"10"},{"name":"maxNegativeIcons","type":"Number","description":"The maximum number of icons to show on the negative side (if any).","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"}],"id":"icon_bar"},{"mod":"Needs, Wants, Desires","aliases":["bar","progressbar"],"children":[],"isRoot":false,"extras":{},"description":"Adds a colored progress bar to the user\u0027s HUD.","fields":[{"name":"color","type":"ColorSet","description":"Color of the bar.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"Represents either a single color in the format of \u0027#RRGGBB\u0027, \u0027#RGB\u0027, or \u00270xRRGGBB\u0027, or a series of colors used for each colorblindness setting. If a single color is specified, it will be assumed to be a normal vision setting and other settings will attempt to adjust dynamically based on (very loose) algorithms compared to the background it\u0027s rendered against.\n\nProperties are: `normal`, `contrast`, `protanopia`, `deuteranopia`, `tritanopia`, `achromatopsia`, and `blueCone`.","fields":[],"id":"progress_bar.color"}},{"name":"width","type":"Number","description":"The width of the bar.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"height","type":"Number","description":"The height of the bar.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"showText","type":"Boolean","description":"If the bar should show a text representation of its value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"}],"id":"progress_bar"}],"isRoot":true,"extras":{},"description":"A collection of options for displaying bars on the user\u0027s HUD","fields":[{"name":"icon","type":"Icon","description":"Optional icon to add to the left or right of the bar (depending on `iconOnRight`); not all bars may display that.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"An icon to use on the UI; if specifying no other properties, you may pass this in as a string in the same format as the `icon` field","fields":[{"name":"icon","type":"TextureResource","description":"A path to an icon to use.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"BarMixin.icon.icon"}},{"name":"width","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"height","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"textureX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"textureY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"x","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"textureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"textureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"}],"id":"BarMixin.icon"}},{"name":"background","type":"Icon","description":"Optional background to add behind the bar.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"An icon to use on the UI; if specifying no other properties, you may pass this in as a string in the same format as the `icon` field","fields":[{"name":"icon","type":"TextureResource","description":"A path to an icon to use.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"BarMixin.background.icon"}},{"name":"width","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"height","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"textureX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"textureY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"x","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"textureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"textureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"}],"id":"BarMixin.background"}},{"name":"horizontalAnchor","type":"HorizontalAnchor","description":"Where to position the bar relative to the screen; valid values are LEFT, CENTER, or RIGHT.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"LEFT"},{"name":"verticalAnchor","type":"VerticalAnchor","description":"Where to position the bar relative to the screen; valid values are TOP, CENTER, or BOTTOM.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"TOP"},{"name":"iconOnRight","type":"Boolean","description":"Specifies if the optional icon from `icon` is on the left (false) or right (true) of the bar.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"x","type":"Number","description":"The X offset from the `horizontalAnchor` point; note this is where the left of the bar is positioned","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"The Y offset from the `verticalAnchor` point; note this is where the top of the bar is positioned","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"rotation","type":"Number","description":"Optional rotation to apply to the bar, in degrees - positive will rotate it counterclockwise, negative will rotate it clockwise.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"formatting","type":"Formatting","description":"Defines any extra formatting parameters to apply","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"Helps define how the need should be displayed to the user; all individual values are optional","fields":[{"name":"expression","type":"Number","description":"An expression that will be used to modify the value prior to displaying it (in case you want to multiply it, round it, square root things, etc).","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"None"},{"name":"precision","type":"Number","description":"Sets the number of decimal places displayed; by default, this is 0","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"useSiPrefix","type":"Boolean","description":"Should the value be converted to use the associated SI prefix; see [https://en.wikipedia.org/wiki/Metric_prefix#List_of_SI_prefixes]","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"unitOfMeasure","type":"String","description":"Unit of measure to be applied after the value (and SI prefix, if used)","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"prepend","type":"String","description":"A string to prepend to the start of the value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"append","type":"String","description":"A string to append to the end of the value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"BarMixin.formatting"}}],"id":"BarMixin"},{"mod":"Needs, Wants, Desires","aliases":["chatonchanged"],"children":[],"isRoot":true,"extras":{},"description":"Use this mixin to print every, single, individual, precise change to the player\u0027s chat. I don\u0027t know why you would use it, but, it\u0027s here in case u li3k ann0y1ng people.","fields":[],"id":"chat_on_changed"},{"mod":"Needs, Wants, Desires","aliases":["chat","chatonlevel"],"children":[],"isRoot":true,"extras":{},"description":"Display a notification in chat anytime the need changes from one level to another","fields":[{"name":"actionBar","type":"Boolean","description":"If set to true, display this value in the action bar. If not, it will be shown in the player\u0027s chat.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"chat_on_level"},{"mod":"Needs, Wants, Desires","aliases":["hidehud","hidebar"],"children":[],"isRoot":true,"extras":{},"description":"Usable on certain needs (by default `health`, `breath`, and `food`) in order to hide the associated UI bar. Other mods may add in additional bars that can be hidden.","fields":[],"id":"hide_bar"},{"mod":"Minecraft","aliases":["score","scoreboard"],"children":[],"isRoot":true,"extras":{},"description":"Use this mixin to mirror the need to a scoreboard entry of the same name as the need; the value of the need will be rounded to the nearest whole number.","fields":[],"id":"scoreboard"},{"mod":"Needs, Wants, Desires","aliases":["ui","gui"],"children":[],"isRoot":true,"extras":{},"description":"Adds the need to a UI display so players can easily track their current level","fields":[{"name":"displayName","type":"String","description":"The name to display in the UI; this can be different from the need itself","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The need\u0027s name"},{"name":"icon","type":"Icon","description":"The icon to use to represent the need","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"An icon to use on the UI; if specifying no other properties, you may pass this in as a string in the same format as the `icon` field","fields":[{"name":"icon","type":"TextureResource","description":"A path to an icon to use.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"ui.icon.icon"}},{"name":"width","type":"Number","description":"The width of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"height","type":"Number","description":"The height of the icon; this defaults to 32px","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"32"},{"name":"textureX","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the X coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"textureY","type":"Number","description":"If your icon path points to a texture sheet, instead of a single icon, use this to specify the Y coordinate of the icon on the texture sheet.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"},{"name":"x","type":"Number","description":"Adjust this if you want to adjust the X offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"Adjust this if you want to adjust the Y offset of the icon in the UI.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"textureWidth","type":"Number","description":"The width of the icon texture; if using a texture sheet, this should be the width of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Width"},{"name":"textureHeight","type":"Number","description":"The height of the icon texture; if using a texture sheet, this should be the height of the sheet","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Icon Height"}],"id":"ui.icon"}},{"name":"color","type":"ColorSet","description":"Sets the RGB color of the bar; this can either be the integer representation of the color, or you can specify a hexidecimal string starting with either # or 0x - when specifying it as hex, you may use shorthand (e.g. `\u0027#777\u0027` will expand to `\u0027#777777\u0027`).","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"Represents either a single color in the format of \u0027#RRGGBB\u0027, \u0027#RGB\u0027, or \u00270xRRGGBB\u0027, or a series of colors used for each colorblindness setting. If a single color is specified, it will be assumed to be a normal vision setting and other settings will attempt to adjust dynamically based on (very loose) algorithms compared to the background it\u0027s rendered against.\n\nProperties are: `normal`, `contrast`, `protanopia`, `deuteranopia`, `tritanopia`, `achromatopsia`, and `blueCone`.","fields":[],"id":"ui.color"}},{"name":"formatting","type":"Formatting","description":"Defines any extra formatting parameters to apply","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"Helps define how the need should be displayed to the user; all individual values are optional","fields":[{"name":"expression","type":"Number","description":"An expression that will be used to modify the value prior to displaying it (in case you want to multiply it, round it, square root things, etc).","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"None"},{"name":"precision","type":"Number","description":"Sets the number of decimal places displayed; by default, this is 0","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"useSiPrefix","type":"Boolean","description":"Should the value be converted to use the associated SI prefix; see [https://en.wikipedia.org/wiki/Metric_prefix#List_of_SI_prefixes]","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"unitOfMeasure","type":"String","description":"Unit of measure to be applied after the value (and SI prefix, if used)","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"prepend","type":"String","description":"A string to prepend to the start of the value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"append","type":"String","description":"A string to append to the end of the value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"ui.formatting"}},{"name":"min","type":"Number","description":"The minimum value to display in the UI; the actual displayed minimum will be either this or the minimum value of the need, whichever is greater.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"max","type":"Number","description":"The maximum value to display in the UI; the actual displayed maximum will be either this or the maximum value of the need, whichever is lesser.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"barMin","type":"Number","description":"The minimum value of the bar in the UI; the actual displayed minimum will be either this, the value of min, or the minimum value of the need, whichever is the greatest.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"barMax","type":"Number","description":"The maximum value of the bar in the UI; the actual displayed maximum will be either this, the value of max, or the maximum value of the need, whichever is the least.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"ui"}],"manipulators":[{"aliases":[],"children":[{"aliases":[],"children":[{"mod":"Needs, Wants, Desires","aliases":["and"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":false},"description":"Represents a series of conditions that will be tested one after another until the first one returns false; applying itself if all conditions pass.","fields":[{"name":"amount","type":"Number","description":"The amount to adjust the associated need by.\n\nIf `source` is used and the associated trigger doesn\u0027t have an amount and is used, it will return 0.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name.","source":"The amount from the source trigger, if any.","\u003ccondition key\u003e":"The amount from the named condition, if any; e.g. if your condition had akey of `swordchucks`, then you could write an expression like `pi * swordchucks + 5`."}},{"name":"conditions","type":"Condition","description":"The conditions to check when this manipulator is triggered; the key for each condition can be used in the amount expression to retrieve the value of that condition.","isOptional":false,"isExpression":false,"isArray":false,"isMap":true,"listOrMapClass":{"description":"A condition to run in order to verify if the conditional manipulator should complete.","fields":[],"id":"and.conditions"}}],"id":"and"},{"mod":"Needs, Wants, Desires","aliases":["not"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":false},"description":"Inverts the given condition.","fields":[{"name":"amount","type":"Number","description":"The amount to adjust the associated need by; if omitted, this will default to the expression variable `matchedValue`, which will be the value of the condition. If that condition doesn\u0027t return a value, the need will not be affected.\n\nSimilarly, if `source` is used and the associated trigger doesn\u0027t have an amount and is used, it will return 0.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","matchedValue":"The amount from the matched condition, if any.","need(Name)":"The current value of the given need by its name.","source":"The amount from the source trigger, if any."},"defaultValue":"matchedValue"},{"name":"condition","type":"Condition","description":"The condition to invert the check for","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A condition to run in order to verify if the conditional manipulator should complete.","fields":[],"id":"not.condition"}}],"id":"not"},{"mod":"Needs, Wants, Desires","aliases":["or"],"children":[{"mod":"Needs, Wants, Desires","aliases":["xor"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":false},"description":"Represents a series of conditions that will be tested one after another to check that only one condition returns true.","fields":[],"id":"xor"}],"isRoot":false,"extras":{"isCondition":true,"isTrigger":false},"description":"Represents a series of conditions that will be tested one after another until the first one returns true.","fields":[{"name":"amount","type":"Number","description":"The amount to adjust the associated need by; if omitted, this will default to the expression variable `matchedValue`, which will be the value of the first matching condition. If that condition doesn\u0027t return a value, the need will not be affected.\n\nSimilarly, if `source` is used and the associated trigger doesn\u0027t have an amount and is used, it will return 0.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","matchedValue":"The amount from the matched condition, if any.","need(Name)":"The current value of the given need by its name.","source":"The amount from the source trigger, if any."},"defaultValue":"matchedValue"},{"name":"conditions","type":"Condition","description":"The conditions to check when this manipulator is triggered","isOptional":false,"isExpression":false,"isArray":true,"isMap":false,"listOrMapClass":{"description":"A condition to run in order to verify if the conditional manipulator should complete.","fields":[],"id":"OrConditionalManipulator.conditions"}}],"id":"or"}],"isRoot":false,"extras":{},"description":"A collection of conditional manipulators for more precise logic-based checks.","fields":[{"name":"triggers","type":"Trigger","description":"The things which will trigger this manipulator. Triggers should be placed on the top level manipulator for clarity, but triggers on inner manipulators will propagate up to the top most manipulator before being tested.\n\nThe root manipulator must have at least one trigger, even if there are triggers on inner manipulators.","isOptional":false,"isExpression":false,"isArray":true,"isMap":false,"listOrMapClass":{"description":"A trigger to cause the conditional manipulator to check its conditions.","fields":[],"id":"ConditionalManipulator.triggers"}}],"id":"ConditionalManipulator"},{"aliases":[],"children":[{"mod":"Minecraft","aliases":["onattack","attack","attacking"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Triggered when the player attacks another entity.","fields":[],"id":"attacking"},{"mod":"Minecraft","aliases":["heal","healed"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Triggered when the player is healed","fields":[],"id":"heal"},{"mod":"Minecraft","aliases":["damaged","attacked","hurt"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Called when the player is hurt","fields":[{"name":"sources","type":"String","description":"An array of damage sources which will trigger this event.","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"}],"id":"hurt"}],"isRoot":false,"extras":{},"description":"A collection of manipulators based on damage (in or out)","fields":[{"name":"amount","type":"Number","description":"The amount to change by when triggered; optional if used as a trigger.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","amount":"The amount of damage/healing.","need(Name)":"The current value of the given need by its name."}},{"name":"hostile","type":"Boolean","description":"If hostile mobs should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"passive","type":"Boolean","description":"If passive mobs should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"players","type":"Boolean","description":"If players should trigger this; if inbound damage, will check the source, if outbound, will check the target","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"minAmount","type":"Number","description":"The minimum amount of damage required to trigger this","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxAmount","type":"Number","description":"The maximum amount of damage required to trigger this","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"DamageBasedManipulator"},{"aliases":[],"children":[{"aliases":[],"children":[{"mod":"Minecraft","aliases":["lookingatblock","lookingat"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":true},"description":"Triggered while the player is looking at, every 5 ticks.","fields":[{"name":"distance","type":"Number","description":"The ray-traced distance to check for the block","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"6"}],"id":"looking_at"},{"mod":"Minecraft","aliases":["block","onblock","aroundblock","nearblock"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":true},"description":"Checks the immediate surroundings of the player for the given block(s); will fire every 5 ticks.","fields":[{"name":"radius","type":"Number","description":"The radius to check around the player; defaults to 0, which only targets the block the player is standing ontop of.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"0"}],"id":"on_block"}],"isRoot":false,"extras":{},"description":"A collection of manipulators that check blocks.","fields":[{"name":"amount","type":"Number","description":"The amount to apply; when this is checking an area, count will refer to the number of matching blocks in the area","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"blocks","type":"Block/Tag","description":"A list of blocks to check","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"id":"BlockCheckingManipulator"},{"mod":"Minecraft","aliases":["holding"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":true},"description":"Triggered every 5 ticks while the player is holding the specified item","fields":[{"name":"amount","type":"Number","description":"The amount to change; count refers to the current stack size of the item(s)","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"mainhand","type":"Boolean","description":"If true, check the player\u0027s mainhand for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"offhand","type":"Boolean","description":"If true, check the player\u0027s offhand for the item","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"items","type":"Item/Tag","description":"An array of items to check against, specified either as a single item (e.g. `\u0027minecraft:cobblestone\u0027`) or a tag (e.g. `\u0027tag:minecraft:leaves\u0027`)","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"id":"holding"},{"mod":"Minecraft","aliases":["itemused"],"children":[{"mod":"Minecraft","aliases":["counteditemuse","itemusedonce"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"A version of Item Used that limits the number of times the player can benefit from the effect per item","fields":[{"name":"defaultAmount","type":"Number","description":"The default amount to apply if not specified on an item level","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"saturation":"The amount of saturation this grants, if food.","count":"The number of times this item has been used prior.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name.","hunger":"The amount of pips on the hunger bar this refills, if food."}},{"name":"items","type":"Map","description":"An key/value map of items/amounts, or array of items using the default amount","isOptional":false,"isExpression":false,"isArray":false,"isMap":true},{"name":"id","type":"String","description":"A key that will be used to store data about item usage; only letters, underscores, and numbers will be recognized. Generally keys should be unique unless you intend to share use counts across multiple instances.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"uses","type":"Number","description":"The number of times the player can benefit from the use of the item; if this is an expression, it will be rounded down to the nearest whole number.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"1"},{"name":"numberStored","type":"Number","description":"The number of items to remember.\n\nItems will fall off the list in order of the least recently benefited from; e.g. if uses is 2, and numberStored is also 2, then using Item A, then item B, then Item A, if you were to use Item C, then item B would fall off the list, because Item A was benefited from more recently.\n\nIf this is an expression, the return value will be rounded down to the nearest whole number (e.g. 0.9 -\u003e 0); if this is less than the size of the list at the time the list is being checked, items will automatically be dropped until the list is down to the proper size.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"No limit(ish)"},{"name":"trackDamage","type":"Boolean","description":"Should damage values be treated as separate items?","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"counted_item_use"}],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Triggered when the player uses an item in the list","fields":[{"name":"defaultAmount","type":"Number","description":"The default amount to apply if not specified on an item level","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"saturation":"The amount of saturation this grants, if food.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name.","hunger":"The amount of pips on the hunger bar this refills, if food."}},{"name":"items","type":"Map","description":"An key/value map of items/amounts, or array of items using the default amount","isOptional":false,"isExpression":false,"isArray":false,"isMap":true}],"id":"item_used"},{"mod":"Minecraft","aliases":["wearing"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":true},"description":"Triggered every 5 ticks while the player is wearing the specific item(s)","fields":[{"name":"amount","type":"Number","description":"The amount to change; count refers to the number of matching item(s)","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"count":"The count of the value being tested.","current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"chest","type":"Boolean","description":"If true, check the player\u0027s chest slot for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"head","type":"Boolean","description":"If true, check the player\u0027s head slot for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"legs","type":"Boolean","description":"If true, check the player\u0027s legs slot for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"feet","type":"Boolean","description":"If true, check the player\u0027s feet slot for the item.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"items","type":"Item/Tag","description":"An array of items to check against, specified either as a single item (e.g. `\u0027minecraft:cobblestone\u0027`) or a tag (e.g. `\u0027tag:minecraft:leaves\u0027`)","isOptional":false,"isExpression":false,"isArray":true,"isMap":false}],"id":"wearing"}],"isRoot":false,"extras":{},"description":"A collection of manipulators that can display their effect in the tooltip when hovering over the item in an inventory","fields":[{"name":"showTooltip","type":"Boolean","description":"If true, show the tooltip. Note that doing so will incur a slight performance penalty onthe client; defaults to false","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"tooltip","type":"String","description":"If this is set, will override the value of the tooltip itself with this string.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Normal tooltip"},{"name":"formatCode","type":"String","description":"A key/value map of formatting/color codes to their associated interval to format tooltips with","isOptional":false,"isExpression":false,"isArray":false,"isMap":true},{"name":"formatting","type":"Formatting","description":"Defines any extra formatting parameters to apply","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None","listOrMapClass":{"description":"Helps define how the need should be displayed to the user; all individual values are optional","fields":[{"name":"expression","type":"Number","description":"An expression that will be used to modify the value prior to displaying it (in case you want to multiply it, round it, square root things, etc).","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."},"defaultValue":"None"},{"name":"precision","type":"Number","description":"Sets the number of decimal places displayed; by default, this is 0","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"useSiPrefix","type":"Boolean","description":"Should the value be converted to use the associated SI prefix; see [https://en.wikipedia.org/wiki/Metric_prefix#List_of_SI_prefixes]","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"unitOfMeasure","type":"String","description":"Unit of measure to be applied after the value (and SI prefix, if used)","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"prepend","type":"String","description":"A string to prepend to the start of the value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"append","type":"String","description":"A string to append to the end of the value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"TooltipManipulator.formatting"}}],"id":"TooltipManipulator"},{"mod":"Minecraft","aliases":["inbiometype","inbiome","biome","biometype"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":true},"description":"Triggers while the player is in one of the specified biomes/biome types; at least one or the other must be specified.","fields":[{"name":"amount","type":"Number","description":"The amount to change by; optional when used as a condition or trigger","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"biomes","type":"String","description":"A list of biomes that will trigger this","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"},{"name":"biomeTypes","type":"String","description":"A list of biome types that will trigger this","isOptional":true,"isExpression":false,"isArray":true,"isMap":false,"defaultValue":"All"}],"id":"biome"},{"mod":"Needs, Wants, Desires","aliases":["latch","latched"],"children":[],"isRoot":false,"extras":{"isCondition":true,"isTrigger":true},"description":"Creates a latched condition which only passes the first time a condition is met, and will only reset when the associated condition is no longer met.\n\nNote that if using this as a trigger or a condition, the latch will still reset regardless of if the manipulator as a whole activates.\n\nNote too (as well) and two (secondly) that triggers on the condition(s) under this one will be ignored.","fields":[{"name":"id","type":"String","description":"An ID for the latch; if two latches share the same name, they will share their state. Be careful if using the same latch ID in a subcondition, as you might produce a latch that flips on and off every other tick.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"amount","type":"Number","description":"The amount to apply when this latch triggers.","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","matchedValue":"The amount from the matched condition, if any.","need(Name)":"The current value of the given need by its name."},"defaultValue":"matchedValue"},{"name":"unlatchAmount","type":"Number","description":"The amount to apply when this latch is no longer being triggered","isOptional":true,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","matchedValue":"The amount from the matched condition, if any.","need(Name)":"The current value of the given need by its name."},"defaultValue":"-amount"},{"name":"condition","type":"Condition","description":"The associated condition to check.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A condition to run in order to verify if the conditional manipulator should complete.","fields":[],"id":"latch.condition"}}],"id":"latch"},{"mod":"Needs, Wants, Desires","aliases":["link","chain","linkchain"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":false},"description":"Affect a series of needs in lockstep with one another; this adjusts all linked needs as a single atomic action in order to avoid loops. Full chains can and should be defined here, and should only be defined in one location. A link will not be updated if updating it would cause an update to an already updated need.","fields":[{"name":"chain","type":"Link","description":"The chain of linked needs to handle; chains will be evaluated starting from the affected need and will propagate through until no more needs need to be updated.","isOptional":false,"isExpression":false,"isArray":true,"isMap":false,"listOrMapClass":{"description":"An individual link in the chain. All links are symmetrical; e.g. if you adjust the need on the left side of the link, the right side will be adjusted by the amount, and if you adjust the right side of the link, the left side will be adjusted.","fields":[{"name":"left","type":"LinkHalf","description":"The left side of the link","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"Defines one side of the link","fields":[{"name":"need","type":"Need","description":"The need for this side of the link","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of this side of the chain.","other":"The current value of the other side of the chain.","need(Name)":"The current value of the given need by its name.","previous":"The previous value of the other side of the chain.","change":"The amount the other side of the chain changed by, or: (current - previous)."}}],"id":"link_chain.chain.left"}},{"name":"right","type":"LinkHalf","description":"The right side of the link","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"Defines one side of the link","fields":[{"name":"need","type":"Need","description":"The need for this side of the link","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of this side of the chain.","other":"The current value of the other side of the chain.","need(Name)":"The current value of the given need by its name.","previous":"The previous value of the other side of the chain.","change":"The amount the other side of the chain changed by, or: (current - previous)."}}],"id":"link_chain.chain.right"}}],"id":"link_chain.chain"}},{"name":"onceEver","type":"Boolean","description":"Changes the functionality to only ever visit a linked need once ever when following every chain.\n\nBy default, if Need A, B, and C were all linked together, a chain could go from A -\u003e B -\u003e C, and then also from A -\u003e C. When this is set to true, the second chain wouldn\u0027t happen as it would detect C had been visited once already.\n\nIn all cases, the first chain (A -\u003e B -\u003e C) could never go back to A or B, as they have been visited in that specific chain.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"link_chain"},{"mod":"Minecraft","aliases":["ondeath"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Triggered when the player dies.","fields":[{"name":"amount","type":"Number","description":"The amount to change by.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"on_death"},{"mod":"Needs, Wants, Desires","aliases":["onneedchanged"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Affect this need when another need has changed; do not set to the same need this is applied to. You have been warned. Can be applied multiple times to the same need with different values.","fields":[{"name":"need","type":"Need","description":"The name of the other need to check.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"minChange","type":"Number","description":"The minimum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxChange","type":"Number","description":"The maximum amount the other need must have changed by in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"minValue","type":"Number","description":"The minimum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"maxValue","type":"Number","description":"The maximum current amount of the other need in order to trigger this manipulator","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"amount","type":"Number","description":"The amount to change by when triggered","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","other":"The current value of the other need.","need(Name)":"The current value of the given need by its name.","previous":"The previous value of the other need.","change":"The amount the need changed by, or: (current - previous)."}}],"id":"on_need_changed"},{"mod":"Minecraft","aliases":["perhour"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Fired every in-game hour that passes in a world after the first; will multiply its amount by the number of hours that have passed if time skips forward. May not work if time is set back.","fields":[{"name":"amount","type":"Number","description":"The amount to set per hour","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"per_hour"},{"mod":"Minecraft","aliases":["slept","woken"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"fields":[{"name":"amount","type":"Number","description":"The amount to change by.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}},{"name":"slept","type":"Boolean","description":"If this should trigger for successful sleeps","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"woken","type":"Boolean","description":"If this should trigger for the player being woken up without sleeping","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"slept"},{"mod":"Needs, Wants, Desires","aliases":["ontick","tick"],"children":[],"isRoot":false,"extras":{"isCondition":false,"isTrigger":true},"description":"Triggered on tick","fields":[{"name":"amount","type":"Number","description":"The amount to adjust by; multiplied by the number of ticks between checks","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"tick"}],"isRoot":true,"extras":{},"description":"The base for most manipulators","fields":[{"name":"downTo","type":"Number","description":"If specified, the lowest value this manipulator can set the parent need to; if set, this will incur a slight performance hit, as the value of the need has to be calculated at the manipulator level.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"},{"name":"upTo","type":"Number","description":"If specified, the highest value this manipulator can set the parent need to; if set, this will incur a slight performance hit, as the value of the need has to be calculated at the manipulator level.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"None"}],"id":"BaseManipulator"}],"actions":[{"aliases":[],"children":[{"mod":"Needs, Wants, Desires","aliases":["tickdebug"],"children":[],"isRoot":false,"extras":{},"description":"This is a debug action; don\u0027t use it unless you want your console spammed.","fields":[],"id":"tick_debug"}],"isRoot":true,"extras":{},"fields":[],"id":"TickingLevelAction"},{"mod":"Needs, Wants, Desires","aliases":["adjustneed"],"children":[],"isRoot":true,"extras":{},"description":"Adjusts the value of either the parent need, or the target need","fields":[{"name":"need","type":"Need","description":"The need to affect; leave out to specify the parent need.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"The parent need"},{"name":"amount","type":"Number","description":"The amount by which to change the targeted need when this action is fired; as a continuous action, it will store the amount it changes the need by, and restore it upon exiting the level.","isOptional":false,"isExpression":true,"isArray":false,"isMap":false,"expressionVars":{"current":"The current value of the parent need.","need(Name)":"The current value of the given need by its name."}}],"id":"adjust_need"},{"mod":"Minecraft","aliases":["command"],"children":[],"isRoot":true,"extras":{},"description":"Runs a command when entering or exiting the level, optionally re-running it on respawn.","fields":[{"name":"command","type":"String","description":"The command to run; `@p` will target the player affected","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"reapply","type":"Boolean","description":"Should the command be re-run when the player respawns","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"log","type":"Boolean","description":"Should the command be logged","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"command"},{"mod":"Needs, Wants, Desires","aliases":["vignette","overlay"],"children":[],"isRoot":true,"extras":{},"description":"Renders an overlay on the player\u0027s UI while they\u0027re in this level","fields":[{"name":"overlay","type":"TextureResource","description":"The overlay texture to draw.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false,"listOrMapClass":{"description":"A path to a texture, which can be:\n\n- One of the builtin textures, which can be specified with just the name (e.g. `\u0027w_sword001\u0027`)\n- A texture from another mod by using the full path (e.g. `\u0027minecraft:textures/item/iron_helmet\u0027`)\n- A local image placed in the `\u0027config/needs/textures\u0027` directory (e.g. `\u0027file:path/to/image.png\u0027`","fields":[],"id":"overlay.overlay"}},{"name":"width","type":"Number","description":"The width of the overlay; if 1 or lower, it\u0027s assumed to be a percentage, otherwise it\u0027s an absolute pixel value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Full Width"},{"name":"height","type":"Number","description":"The height of the overlay; if 1 or lower, it\u0027s assumed to be a percentage, otherwise it\u0027s an absolute pixel value","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"Full Height"},{"name":"x","type":"Number","description":"For images that are not full width, the X offset to apply, in pixels; if negative, will be from the right.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"y","type":"Number","description":"For images that are not full height, the Y offset to apply, in pixels; if negative, will be from the bottom.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"isVignette","type":"Boolean","description":"Whether or not this should count as a vignette or not; if true, the player will be able to disable it by turning off fancy graphics. You should generally leave this enabled unless you have good reason not to.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"}],"id":"overlay"},{"mod":"Minecraft","aliases":["potioneffect"],"children":[],"isRoot":true,"extras":{},"description":"Applies a potion effect to the player","fields":[{"name":"effect","type":"String","description":"The ID of the potion effect.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"duration","type":"Number","description":"The amount of time to apply the effect for if specified as an entry or exit action; continuous actions will ignore this.","isOptional":false,"isExpression":false,"isArray":false,"isMap":false},{"name":"amplifier","type":"Number","description":"The level to amplify the potion; the default, 0, will apply as a level 1 potion, 1 would apply a level 2 potion, etc.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"0"},{"name":"persistOnDeath","type":"Boolean","description":"If true, the effect will be reapplied with the remaining duration on death; this only applies when this is used as an entry or exit action, continuous effects will always reapply on death.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"},{"name":"additive","type":"Boolean","description":"If true, potion effects from this action will stack with others of the same type from other actions. This should generally be kept the same amongst all uses of the same effect, otherwise things will become... interesting.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"True"},{"name":"particles","type":"Boolean","description":"Set if the potion effect should show particles or not.","isOptional":true,"isExpression":false,"isArray":false,"isMap":false,"defaultValue":"False"}],"id":"potion_effect"}]}
